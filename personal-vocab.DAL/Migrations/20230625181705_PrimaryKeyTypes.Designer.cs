// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using personal_vocab.DAL.DataAccess;

#nullable disable

namespace personal_vocab.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230625181705_PrimaryKeyTypes")]
    partial class PrimaryKeyTypes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("sm_repetition_algorithm.DAL.Entitis.Deck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DeckTermId")
                        .HasColumnType("integer");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DeckTermId");

                    b.HasIndex("GroupId");

                    b.ToTable("Decks");
                });

            modelBuilder.Entity("sm_repetition_algorithm.DAL.Entitis.DeckTerms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DeckId")
                        .HasColumnType("integer");

                    b.Property<int>("TermId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DeckTerms");
                });

            modelBuilder.Entity("sm_repetition_algorithm.DAL.Entitis.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NewWordAmount")
                        .HasColumnType("integer");

                    b.Property<int>("RepeatedWordAmount")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("sm_repetition_algorithm.DAL.Entitis.RepetitionData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("Easiness")
                        .HasColumnType("real");

                    b.Property<int>("Interval")
                        .HasColumnType("integer");

                    b.Property<DateTime>("NextPracticeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("RepetitionNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("Repetitions")
                        .HasColumnType("integer");

                    b.Property<int>("TermId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Repetitions");
                });

            modelBuilder.Entity("sm_repetition_algorithm.DAL.Entitis.Term", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DeckTermId")
                        .HasColumnType("integer");

                    b.Property<string>("Example")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Meaning")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Transcription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DeckTermId");

                    b.ToTable("Terms");
                });

            modelBuilder.Entity("sm_repetition_algorithm.DAL.Entitis.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("sm_repetition_algorithm.DAL.Entitis.Deck", b =>
                {
                    b.HasOne("sm_repetition_algorithm.DAL.Entitis.DeckTerms", "DeckTerm")
                        .WithMany("Decs")
                        .HasForeignKey("DeckTermId");

                    b.HasOne("sm_repetition_algorithm.DAL.Entitis.Group", "Group")
                        .WithMany("Decks")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeckTerm");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("sm_repetition_algorithm.DAL.Entitis.Group", b =>
                {
                    b.HasOne("sm_repetition_algorithm.DAL.Entitis.User", "User")
                        .WithMany("Groups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("sm_repetition_algorithm.DAL.Entitis.Term", b =>
                {
                    b.HasOne("sm_repetition_algorithm.DAL.Entitis.DeckTerms", "DeckTerm")
                        .WithMany("Terms")
                        .HasForeignKey("DeckTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeckTerm");
                });

            modelBuilder.Entity("sm_repetition_algorithm.DAL.Entitis.DeckTerms", b =>
                {
                    b.Navigation("Decs");

                    b.Navigation("Terms");
                });

            modelBuilder.Entity("sm_repetition_algorithm.DAL.Entitis.Group", b =>
                {
                    b.Navigation("Decks");
                });

            modelBuilder.Entity("sm_repetition_algorithm.DAL.Entitis.User", b =>
                {
                    b.Navigation("Groups");
                });
#pragma warning restore 612, 618
        }
    }
}
